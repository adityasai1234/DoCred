"use strict";(()=>{var e={};e.id=289,e.ids=[289],e.modules={8013:e=>{e.exports=require("mongodb")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},879:(e,t,n)=>{n.r(t),n.d(t,{originalPathname:()=>O,patchFetch:()=>y,requestAsyncStorage:()=>m,routeModule:()=>w,serverHooks:()=>f,staticGenerationAsyncStorage:()=>_});var a={};n.r(a),n.d(a,{DELETE:()=>g,PUT:()=>p});var r=n(9303),s=n(8716),i=n(670),o=n(7070),d=n(8013),u=n(2021),c=n(2087);class l{static async createSong(e){let t=await (0,u.mU)(),n={...e,created_at:new Date,updated_at:new Date},a=await t.insertOne(n),r=await t.findOne({_id:a.insertedId});if(!r)throw Error("Failed to create song");return(0,c.d)(r)}static async getSongsByUserId(e,t=1,n=10){let a=await (0,u.mU)(),[r,s]=await Promise.all([a.find({user_id:e}).sort({created_at:-1}).skip((t-1)*n).limit(n).toArray(),a.countDocuments({user_id:e})]);return{songs:r.map(c.d),total:s}}static async getSongById(e,t){let n=await (0,u.mU)();if(!d.ObjectId.isValid(e))return null;let a=await n.findOne({_id:new d.ObjectId(e),user_id:t});return a?(0,c.d)(a):null}static async updateSong(e,t,n){let a=await (0,u.mU)();if(!d.ObjectId.isValid(e))return null;let r=await a.findOneAndUpdate({_id:new d.ObjectId(e),user_id:t},{$set:{...n,updated_at:new Date}},{returnDocument:"after"});return r?(0,c.d)(r):null}static async deleteSong(e,t){let n=await (0,u.mU)();return!!d.ObjectId.isValid(e)&&1===(await n.deleteOne({_id:new d.ObjectId(e),user_id:t})).deletedCount}static async getSongByIdForDeletion(e,t){let n=await (0,u.mU)();return d.ObjectId.isValid(e)?await n.findOne({_id:new d.ObjectId(e),user_id:t}):null}}async function p(e,{params:t}){try{let{id:n}=t,{title:a,artist:r,genre:s}=await e.json(),i=await l.updateSong(n,{title:a,artist:r,genre:s});return o.NextResponse.json(i)}catch(e){return o.NextResponse.json({error:e.message},{status:500})}}async function g(e,{params:t}){try{let{id:e}=t;if(!await l.getSongByIdForDeletion(e))return o.NextResponse.json({error:"Song not found"},{status:404});if(!await l.deleteSong(e))return o.NextResponse.json({error:"Failed to delete song"},{status:500});return o.NextResponse.json({message:"Song deleted successfully"})}catch(e){return o.NextResponse.json({error:e.message},{status:500})}}let w=new r.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/songs/[id]/route",pathname:"/api/songs/[id]",filename:"route",bundlePath:"app/api/songs/[id]/route"},resolvedPagePath:"/workspaces/Vibe-loop/app/api/songs/[id]/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:m,staticGenerationAsyncStorage:_,serverHooks:f}=w,O="/api/songs/[id]/route";function y(){return(0,i.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:_})}},2087:(e,t,n)=>{n.d(t,{d:()=>a});function a(e){return{...e,id:e._id.toString(),_id:e._id.toString(),created_at:e.created_at,updated_at:e.updated_at}}},2021:(e,t,n)=>{let a;n.d(t,{mU:()=>o});var r=n(8013);if(!process.env.MONGODB_URI)throw Error('Invalid/Missing environment variable: "MONGODB_URI"');let s=process.env.MONGODB_URI;async function i(){return(await a).db("musicapp")}async function o(){return(await i()).collection("songs")}a=new r.MongoClient(s,{}).connect()}};var t=require("../../../../webpack-runtime.js");t.C(e);var n=e=>t(t.s=e),a=t.X(0,[276,972],()=>n(879));module.exports=a})();